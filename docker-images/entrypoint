#!/usr/bin/python
#coding: utf-8

import sys
import os
import os.path
import subprocess
import logging
import socket

base='/host'

def umount(volume):
    try:
        subprocess.check_call('umount %s' % volume, shell=True)
        # TODO retry
    except subprocess.CalledProcessError:
        logging.info('umount : %s error', volume)

def cleanup():
    with open('/proc/mounts', 'r') as f:
        mounts = f.read().decode('utf-8')
    umounts = []
    for line in mounts.split('\n'):
        ftab = line.split()
        if len(ftab) > 1 and ftab[1].startswith(base + '/'):
            umounts.append(ftab[1])
    for volume in sorted(umounts, reverse=True):
        umount(volume)

def run():
    os.execve('/pilot/pilot', ['/pilot/pilot', '-template', '/pilot/fluentd.tpl','-base', base, '-log-level', 'debug' ], os.environ)

def config():
    subprocess.check_call(['/pilot/config.default'])

def host_ip():
    if os.getenv('NEED_HOST_IP') and os.getenv('NEED_HOST_IP') == 'true':
        host_name = socket.getfqdn(socket.gethostname())
        host_ip = socket.gethostbyname(host_name)
        os.putenv("HOST_IP", host_ip)

if __name__ == '__main__':
    host_ip()
    config()
    cleanup()
    run()
